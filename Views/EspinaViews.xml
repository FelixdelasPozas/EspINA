<ServerManagerConfiguration>
 <ProxyGroup name="views">
   <SliceViewProxy name="pqSliceView" class="vtkPVSliceView"
     processes="client|renderserver|dataserver"
     base_proxygroup="views" base_proxyname="RenderView">
     <Documentation>
        View proxy for a 3D interactive render view in Espina.
      </Documentation>
<!--      <ProxyProperty name="Samples"
        command="AddSample"
        remove_command="RemoveSample"
        repeatable="1">
        <Documentation>
          Samples in espina view.
        </Documentation>
      </ProxyProperty>-->
      <DoubleVectorProperty name="HCrossLineColor"
        command="SetHCrossLineColor"
        number_of_elements="3"
        default_values="1 1 1">
        <Documentation>
	  The color for the Horizontal CrossHair's Line
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="VCrossLineColor"
        command="SetVCrossLineColor"
        number_of_elements="3"
        default_values="1 1 1">
        <Documentation>
	  The color for the Vertical CrossHair' Line
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty name="ShowSegmentations"
        command="SetShowSegmentations"
        number_of_elements="1"
        default_values="1">
        <Documentation>
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="Slice"
        command="SetSlice"
        number_of_elements="1"
        default_values="0">
        <Documentation>
	  Set/Get at which position (in an orthogonal direction to the slicing plane)
	  the input has to be sliced
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="SlicingPlane"
        command="SetSlicingPlane"
        number_of_elements="1"
        default_values="0">
        <Documentation>
	  Set/Get which plane is being sliced
        </Documentation>
      </IntVectorProperty>
   </SliceViewProxy>
 </ProxyGroup>
 
 <ProxyGroup name="representations">
    <RepresentationProxy name="ChannelRepresentation"
      class="vtkSliceRepresentation"
      processes="client|renderserver|dataserver">
      <Documentation>
        This is the new representation type we are adding. This is identical to
        the SurfaceRepresentation except that we are overriding the mapper with
        our mapper.
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <Documentation>
          Set the input to the representation. Must be a vtkImageData producer.
        </Documentation>
	<DataTypeDomain name="input_type" composite_data_supported="0">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array_any" attribute_type="any">
        </InputArrayDomain>
      </InputProperty>
      <IntVectorProperty name="Type"
        command="SetType"
        number_of_elements="1"
        default_values="0">
        <Documentation>
          Set the type for this representation.
	  Type=0: Channel
	  Type=1: Segmentation
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set the visibility for this representation.
        </Documentation>
      </IntVectorProperty>
    </RepresentationProxy>
    <RepresentationProxy name="SegmentationRepresentation"
      class="vtkSliceRepresentation"
      processes="client|renderserver|dataserver">
      <Documentation>
        This is the new representation type we are adding. This is identical to
        the SurfaceRepresentation except that we are overriding the mapper with
        our mapper.
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <Documentation>
          Set the input to the representation. Must be a vtkImageData producer.
        </Documentation>
	<DataTypeDomain name="input_type" composite_data_supported="0">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array_any" attribute_type="any">
        </InputArrayDomain>
      </InputProperty>
      <IntVectorProperty name="Type"
        command="SetType"
        number_of_elements="1"
        default_values="1">
        <Documentation>
          Set the type for this representation.
	  Type=0: Channel
	  Type=1: Segmentation
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set the visibility for this representation.
        </Documentation>
      </IntVectorProperty>
    </RepresentationProxy>
  </ProxyGroup>-->
</ServerManagerConfiguration>
